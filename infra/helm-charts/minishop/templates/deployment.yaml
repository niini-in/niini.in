{{- range $serviceName, $service := .Values -}}
{{- if and (kindIs "map" $service) $service.enabled -}}
{{- if has $serviceName (list "userService" "productService" "orderService" "paymentService" "notificationService") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "minishop.serviceName" (dict "serviceName" $serviceName "context" $) }}
  labels:
    {{- include "minishop.serviceLabels" (dict "serviceName" $serviceName "context" $) | nindent 4 }}
spec:
  {{- if $service.autoscaling.enabled }}
  replicas: {{ $service.autoscaling.minReplicas }}
  {{- else }}
  replicas: {{ $service.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "minishop.serviceSelector" (dict "serviceName" $serviceName "context" $) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "minishop.serviceSelector" (dict "serviceName" $serviceName "context" $) | nindent 8 }}
    spec:
      containers:
        - name: {{ $serviceName }}
          image: "{{ $service.image.repository }}:{{ $service.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ $service.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          env:
            - name: SERVICE_NAME
              value: {{ $serviceName }}
            - name: SERVICE_PORT
              value: "{{ $service.service.port }}"
            - name: POSTGRES_HOST
              value: {{ $.Release.Name }}-postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: {{ $.Values.postgresql.auth.database }}
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-postgresql
                  key: postgres-password
            - name: REDIS_HOST
              value: {{ $.Release.Name }}-redis-master
            - name: REDIS_PORT
              value: "6379"
            - name: KAFKA_BROKERS
              value: "{{ $.Release.Name }}-kafka-0.{{ $.Release.Name }}-kafka-headless:9092"
            - name: ENVIRONMENT
              value: {{ $.Values.global.environment }}
          resources:
            {{- toYaml $service.resources | nindent 12 }}
---
{{- end }}
{{- end }}
{{- end }}